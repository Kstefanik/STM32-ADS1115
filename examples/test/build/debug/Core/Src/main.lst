ARM GAS  /tmp/ccZrXVfi.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.cpp"
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	_ZL12MX_GPIO_Initv:
  26              	.LFB135:
   1:Core/Src/main.cpp **** /* USER CODE BEGIN Header */
   2:Core/Src/main.cpp **** /**
   3:Core/Src/main.cpp ****   ******************************************************************************
   4:Core/Src/main.cpp ****   * @file           : main.c
   5:Core/Src/main.cpp ****   * @brief          : Main program body
   6:Core/Src/main.cpp ****   ******************************************************************************
   7:Core/Src/main.cpp ****   * @attention
   8:Core/Src/main.cpp ****   *
   9:Core/Src/main.cpp ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.cpp ****   * All rights reserved.
  11:Core/Src/main.cpp ****   *
  12:Core/Src/main.cpp ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.cpp ****   * in the root directory of this software component.
  14:Core/Src/main.cpp ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.cpp ****   *
  16:Core/Src/main.cpp ****   ******************************************************************************
  17:Core/Src/main.cpp ****   */
  18:Core/Src/main.cpp **** /* USER CODE END Header */
  19:Core/Src/main.cpp **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.cpp **** #include "main.h"
  21:Core/Src/main.cpp **** 
  22:Core/Src/main.cpp **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.cpp **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.cpp **** 
  25:Core/Src/main.cpp **** #include "ADS1115.hpp"
  26:Core/Src/main.cpp **** #include <stdio.h>
  27:Core/Src/main.cpp **** #include <string.h>
  28:Core/Src/main.cpp **** 
  29:Core/Src/main.cpp **** /* USER CODE END Includes */
  30:Core/Src/main.cpp **** 
  31:Core/Src/main.cpp **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.cpp **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/ccZrXVfi.s 			page 2


  33:Core/Src/main.cpp **** 
  34:Core/Src/main.cpp **** /* USER CODE END PTD */
  35:Core/Src/main.cpp **** 
  36:Core/Src/main.cpp **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.cpp **** /* USER CODE BEGIN PD */
  38:Core/Src/main.cpp **** 
  39:Core/Src/main.cpp **** /* USER CODE END PD */
  40:Core/Src/main.cpp **** 
  41:Core/Src/main.cpp **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/main.cpp **** /* USER CODE BEGIN PM */
  43:Core/Src/main.cpp **** 
  44:Core/Src/main.cpp **** /* USER CODE END PM */
  45:Core/Src/main.cpp **** 
  46:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  47:Core/Src/main.cpp **** I2C_HandleTypeDef hi2c1;
  48:Core/Src/main.cpp **** 
  49:Core/Src/main.cpp **** UART_HandleTypeDef huart2;
  50:Core/Src/main.cpp **** 
  51:Core/Src/main.cpp **** /* USER CODE BEGIN PV */
  52:Core/Src/main.cpp **** 
  53:Core/Src/main.cpp **** static const uint8_t addr = 0x48 << 1;
  54:Core/Src/main.cpp **** 
  55:Core/Src/main.cpp **** /* USER CODE END PV */
  56:Core/Src/main.cpp **** 
  57:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.cpp **** void SystemClock_Config(void);
  59:Core/Src/main.cpp **** static void MX_GPIO_Init(void);
  60:Core/Src/main.cpp **** static void MX_I2C1_Init(void);
  61:Core/Src/main.cpp **** static void MX_USART2_UART_Init(void);
  62:Core/Src/main.cpp **** /* USER CODE BEGIN PFP */
  63:Core/Src/main.cpp **** 
  64:Core/Src/main.cpp **** /* USER CODE END PFP */
  65:Core/Src/main.cpp **** 
  66:Core/Src/main.cpp **** /* Private user code ---------------------------------------------------------*/
  67:Core/Src/main.cpp **** /* USER CODE BEGIN 0 */
  68:Core/Src/main.cpp **** 
  69:Core/Src/main.cpp **** 
  70:Core/Src/main.cpp **** /* USER CODE END 0 */
  71:Core/Src/main.cpp **** 
  72:Core/Src/main.cpp **** /**
  73:Core/Src/main.cpp ****   * @brief  The application entry point.
  74:Core/Src/main.cpp ****   * @retval int
  75:Core/Src/main.cpp ****   */
  76:Core/Src/main.cpp **** int main(void)
  77:Core/Src/main.cpp **** {
  78:Core/Src/main.cpp **** 
  79:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
  80:Core/Src/main.cpp **** 
  81:Core/Src/main.cpp ****   
  82:Core/Src/main.cpp **** 
  83:Core/Src/main.cpp ****   /* USER CODE END 1 */
  84:Core/Src/main.cpp **** 
  85:Core/Src/main.cpp ****   /* MCU Configuration--------------------------------------------------------*/
  86:Core/Src/main.cpp **** 
  87:Core/Src/main.cpp ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  88:Core/Src/main.cpp ****   HAL_Init();
  89:Core/Src/main.cpp **** 
ARM GAS  /tmp/ccZrXVfi.s 			page 3


  90:Core/Src/main.cpp ****   /* USER CODE BEGIN Init */
  91:Core/Src/main.cpp **** 
  92:Core/Src/main.cpp ****   /* USER CODE END Init */
  93:Core/Src/main.cpp **** 
  94:Core/Src/main.cpp ****   /* Configure the system clock */
  95:Core/Src/main.cpp ****   SystemClock_Config();
  96:Core/Src/main.cpp **** 
  97:Core/Src/main.cpp ****   /* USER CODE BEGIN SysInit */
  98:Core/Src/main.cpp **** 
  99:Core/Src/main.cpp ****   /* USER CODE END SysInit */
 100:Core/Src/main.cpp **** 
 101:Core/Src/main.cpp ****   /* Initialize all configured peripherals */
 102:Core/Src/main.cpp ****   MX_GPIO_Init();
 103:Core/Src/main.cpp ****   MX_I2C1_Init();
 104:Core/Src/main.cpp ****   MX_USART2_UART_Init();
 105:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 106:Core/Src/main.cpp **** 
 107:Core/Src/main.cpp ****   /* USER CODE END 2 */
 108:Core/Src/main.cpp **** 
 109:Core/Src/main.cpp ****   /* Infinite loop */
 110:Core/Src/main.cpp ****   /* USER CODE BEGIN WHILE */
 111:Core/Src/main.cpp **** 
 112:Core/Src/main.cpp ****   char buf[50];
 113:Core/Src/main.cpp **** 
 114:Core/Src/main.cpp **** 
 115:Core/Src/main.cpp ****   #define ADS1115_ADDRESS 0x48
 116:Core/Src/main.cpp ****   unsigned char ADSwrite[6];
 117:Core/Src/main.cpp ****   int16_t reading;
 118:Core/Src/main.cpp ****   float voltage;
 119:Core/Src/main.cpp ****   const float voltageConv = 6.114 / 32768.0;
 120:Core/Src/main.cpp **** 
 121:Core/Src/main.cpp **** 
 122:Core/Src/main.cpp ****   while (1)
 123:Core/Src/main.cpp ****   {
 124:Core/Src/main.cpp ****       ADSwrite[0] = 0x01;
 125:Core/Src/main.cpp ****     
 126:Core/Src/main.cpp ****       ADSwrite[1] = 0xF1;//0xC1;   // 1 100 000 1    ->    1100 0001   ->   C1 (in hex)      // pie
 127:Core/Src/main.cpp ****       
 128:Core/Src/main.cpp ****       ADSwrite[2] =0x83; // 100 0 0 0 11  kolejny bajt
 129:Core/Src/main.cpp ****       
 130:Core/Src/main.cpp ****       HAL_I2C_Master_Transmit(&hi2c1, ADS1115_ADDRESS<<1, ADSwrite, 3, 100);
 131:Core/Src/main.cpp ****       ADSwrite[0] = 0x00;
 132:Core/Src/main.cpp ****       HAL_I2C_Master_Transmit(&hi2c1, ADS1115_ADDRESS<<1, ADSwrite, 1, 100);
 133:Core/Src/main.cpp ****       HAL_Delay(20);
 134:Core/Src/main.cpp ****       HAL_I2C_Master_Receive(&hi2c1, ADS1115_ADDRESS<<1, ADSwrite, 2, 100);
 135:Core/Src/main.cpp ****       reading = ADSwrite[0] << 8 | ADSwrite[1];
 136:Core/Src/main.cpp ****       if(reading < 0)
 137:Core/Src/main.cpp ****       {
 138:Core/Src/main.cpp ****         reading = 0;
 139:Core/Src/main.cpp ****       }
 140:Core/Src/main.cpp **** 
 141:Core/Src/main.cpp ****       voltage = reading * voltageConv;
 142:Core/Src/main.cpp **** 
 143:Core/Src/main.cpp ****       sprintf(buf, "%f V\r\n", voltage);
 144:Core/Src/main.cpp ****       HAL_UART_Transmit(&huart2, (uint8_t*)buf, strlen(buf), HAL_MAX_DELAY);
 145:Core/Src/main.cpp ****       HAL_Delay(500);
 146:Core/Src/main.cpp **** 
ARM GAS  /tmp/ccZrXVfi.s 			page 4


 147:Core/Src/main.cpp **** 
 148:Core/Src/main.cpp ****     /* USER CODE END WHILE */
 149:Core/Src/main.cpp **** 
 150:Core/Src/main.cpp ****     /* USER CODE BEGIN 3 */
 151:Core/Src/main.cpp ****   }
 152:Core/Src/main.cpp ****   /* USER CODE END 3 */
 153:Core/Src/main.cpp **** }
 154:Core/Src/main.cpp **** 
 155:Core/Src/main.cpp **** /**
 156:Core/Src/main.cpp ****   * @brief System Clock Configuration
 157:Core/Src/main.cpp ****   * @retval None
 158:Core/Src/main.cpp ****   */
 159:Core/Src/main.cpp **** void SystemClock_Config(void)
 160:Core/Src/main.cpp **** {
 161:Core/Src/main.cpp ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 162:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 163:Core/Src/main.cpp ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 164:Core/Src/main.cpp **** 
 165:Core/Src/main.cpp ****   /** Initializes the RCC Oscillators according to the specified parameters
 166:Core/Src/main.cpp ****   * in the RCC_OscInitTypeDef structure.
 167:Core/Src/main.cpp ****   */
 168:Core/Src/main.cpp ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 169:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 170:Core/Src/main.cpp ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 171:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 172:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 173:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 174:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 175:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 176:Core/Src/main.cpp ****   {
 177:Core/Src/main.cpp ****     Error_Handler();
 178:Core/Src/main.cpp ****   }
 179:Core/Src/main.cpp **** 
 180:Core/Src/main.cpp ****   /** Initializes the CPU, AHB and APB buses clocks
 181:Core/Src/main.cpp ****   */
 182:Core/Src/main.cpp ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 183:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 184:Core/Src/main.cpp ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 185:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 186:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 187:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 188:Core/Src/main.cpp **** 
 189:Core/Src/main.cpp ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 190:Core/Src/main.cpp ****   {
 191:Core/Src/main.cpp ****     Error_Handler();
 192:Core/Src/main.cpp ****   }
 193:Core/Src/main.cpp ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2|RCC_PERIPHCLK_I2C1;
 194:Core/Src/main.cpp ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 195:Core/Src/main.cpp ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 196:Core/Src/main.cpp ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 197:Core/Src/main.cpp ****   {
 198:Core/Src/main.cpp ****     Error_Handler();
 199:Core/Src/main.cpp ****   }
 200:Core/Src/main.cpp **** }
 201:Core/Src/main.cpp **** 
 202:Core/Src/main.cpp **** /**
 203:Core/Src/main.cpp ****   * @brief I2C1 Initialization Function
ARM GAS  /tmp/ccZrXVfi.s 			page 5


 204:Core/Src/main.cpp ****   * @param None
 205:Core/Src/main.cpp ****   * @retval None
 206:Core/Src/main.cpp ****   */
 207:Core/Src/main.cpp **** static void MX_I2C1_Init(void)
 208:Core/Src/main.cpp **** {
 209:Core/Src/main.cpp **** 
 210:Core/Src/main.cpp ****   /* USER CODE BEGIN I2C1_Init 0 */
 211:Core/Src/main.cpp **** 
 212:Core/Src/main.cpp ****   /* USER CODE END I2C1_Init 0 */
 213:Core/Src/main.cpp **** 
 214:Core/Src/main.cpp ****   /* USER CODE BEGIN I2C1_Init 1 */
 215:Core/Src/main.cpp **** 
 216:Core/Src/main.cpp ****   /* USER CODE END I2C1_Init 1 */
 217:Core/Src/main.cpp ****   hi2c1.Instance = I2C1;
 218:Core/Src/main.cpp ****   hi2c1.Init.Timing = 0x00201D2B;
 219:Core/Src/main.cpp ****   hi2c1.Init.OwnAddress1 = 0;
 220:Core/Src/main.cpp ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 221:Core/Src/main.cpp ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 222:Core/Src/main.cpp ****   hi2c1.Init.OwnAddress2 = 0;
 223:Core/Src/main.cpp ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 224:Core/Src/main.cpp ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 225:Core/Src/main.cpp ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 226:Core/Src/main.cpp ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 227:Core/Src/main.cpp ****   {
 228:Core/Src/main.cpp ****     Error_Handler();
 229:Core/Src/main.cpp ****   }
 230:Core/Src/main.cpp **** 
 231:Core/Src/main.cpp ****   /** Configure Analogue filter
 232:Core/Src/main.cpp ****   */
 233:Core/Src/main.cpp ****   if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 234:Core/Src/main.cpp ****   {
 235:Core/Src/main.cpp ****     Error_Handler();
 236:Core/Src/main.cpp ****   }
 237:Core/Src/main.cpp **** 
 238:Core/Src/main.cpp ****   /** Configure Digital filter
 239:Core/Src/main.cpp ****   */
 240:Core/Src/main.cpp ****   if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 241:Core/Src/main.cpp ****   {
 242:Core/Src/main.cpp ****     Error_Handler();
 243:Core/Src/main.cpp ****   }
 244:Core/Src/main.cpp ****   /* USER CODE BEGIN I2C1_Init 2 */
 245:Core/Src/main.cpp **** 
 246:Core/Src/main.cpp ****   /* USER CODE END I2C1_Init 2 */
 247:Core/Src/main.cpp **** 
 248:Core/Src/main.cpp **** }
 249:Core/Src/main.cpp **** 
 250:Core/Src/main.cpp **** /**
 251:Core/Src/main.cpp ****   * @brief USART2 Initialization Function
 252:Core/Src/main.cpp ****   * @param None
 253:Core/Src/main.cpp ****   * @retval None
 254:Core/Src/main.cpp ****   */
 255:Core/Src/main.cpp **** static void MX_USART2_UART_Init(void)
 256:Core/Src/main.cpp **** {
 257:Core/Src/main.cpp **** 
 258:Core/Src/main.cpp ****   /* USER CODE BEGIN USART2_Init 0 */
 259:Core/Src/main.cpp **** 
 260:Core/Src/main.cpp ****   /* USER CODE END USART2_Init 0 */
ARM GAS  /tmp/ccZrXVfi.s 			page 6


 261:Core/Src/main.cpp **** 
 262:Core/Src/main.cpp ****   /* USER CODE BEGIN USART2_Init 1 */
 263:Core/Src/main.cpp **** 
 264:Core/Src/main.cpp ****   /* USER CODE END USART2_Init 1 */
 265:Core/Src/main.cpp ****   huart2.Instance = USART2;
 266:Core/Src/main.cpp ****   huart2.Init.BaudRate = 38400;
 267:Core/Src/main.cpp ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 268:Core/Src/main.cpp ****   huart2.Init.StopBits = UART_STOPBITS_1;
 269:Core/Src/main.cpp ****   huart2.Init.Parity = UART_PARITY_NONE;
 270:Core/Src/main.cpp ****   huart2.Init.Mode = UART_MODE_TX_RX;
 271:Core/Src/main.cpp ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 272:Core/Src/main.cpp ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 273:Core/Src/main.cpp ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 274:Core/Src/main.cpp ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 275:Core/Src/main.cpp ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 276:Core/Src/main.cpp ****   {
 277:Core/Src/main.cpp ****     Error_Handler();
 278:Core/Src/main.cpp ****   }
 279:Core/Src/main.cpp ****   /* USER CODE BEGIN USART2_Init 2 */
 280:Core/Src/main.cpp **** 
 281:Core/Src/main.cpp ****   /* USER CODE END USART2_Init 2 */
 282:Core/Src/main.cpp **** 
 283:Core/Src/main.cpp **** }
 284:Core/Src/main.cpp **** 
 285:Core/Src/main.cpp **** /**
 286:Core/Src/main.cpp ****   * @brief GPIO Initialization Function
 287:Core/Src/main.cpp ****   * @param None
 288:Core/Src/main.cpp ****   * @retval None
 289:Core/Src/main.cpp ****   */
 290:Core/Src/main.cpp **** static void MX_GPIO_Init(void)
 291:Core/Src/main.cpp **** {
  27              		.loc 1 291 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35 0002 8AB0     		sub	sp, sp, #40
  36              		.cfi_def_cfa_offset 48
 292:Core/Src/main.cpp ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  37              		.loc 1 292 3 view .LVU1
  38              		.loc 1 292 20 is_stmt 0 view .LVU2
  39 0004 0024     		movs	r4, #0
  40 0006 0594     		str	r4, [sp, #20]
  41 0008 0694     		str	r4, [sp, #24]
  42 000a 0794     		str	r4, [sp, #28]
  43 000c 0894     		str	r4, [sp, #32]
  44 000e 0994     		str	r4, [sp, #36]
 293:Core/Src/main.cpp **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 294:Core/Src/main.cpp **** /* USER CODE END MX_GPIO_Init_1 */
 295:Core/Src/main.cpp **** 
 296:Core/Src/main.cpp ****   /* GPIO Ports Clock Enable */
 297:Core/Src/main.cpp ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  45              		.loc 1 297 3 is_stmt 1 view .LVU3
  46              	.LBB4:
ARM GAS  /tmp/ccZrXVfi.s 			page 7


  47              		.loc 1 297 3 view .LVU4
  48              		.loc 1 297 3 view .LVU5
  49 0010 214B     		ldr	r3, .L3
  50 0012 5A69     		ldr	r2, [r3, #20]
  51 0014 42F40022 		orr	r2, r2, #524288
  52 0018 5A61     		str	r2, [r3, #20]
  53              		.loc 1 297 3 view .LVU6
  54 001a 5A69     		ldr	r2, [r3, #20]
  55 001c 02F40022 		and	r2, r2, #524288
  56 0020 0192     		str	r2, [sp, #4]
  57              		.loc 1 297 3 view .LVU7
  58 0022 019A     		ldr	r2, [sp, #4]
  59              	.LBE4:
  60              		.loc 1 297 3 view .LVU8
 298:Core/Src/main.cpp ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  61              		.loc 1 298 3 view .LVU9
  62              	.LBB5:
  63              		.loc 1 298 3 view .LVU10
  64              		.loc 1 298 3 view .LVU11
  65 0024 5A69     		ldr	r2, [r3, #20]
  66 0026 42F48002 		orr	r2, r2, #4194304
  67 002a 5A61     		str	r2, [r3, #20]
  68              		.loc 1 298 3 view .LVU12
  69 002c 5A69     		ldr	r2, [r3, #20]
  70 002e 02F48002 		and	r2, r2, #4194304
  71 0032 0292     		str	r2, [sp, #8]
  72              		.loc 1 298 3 view .LVU13
  73 0034 029A     		ldr	r2, [sp, #8]
  74              	.LBE5:
  75              		.loc 1 298 3 view .LVU14
 299:Core/Src/main.cpp ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  76              		.loc 1 299 3 view .LVU15
  77              	.LBB6:
  78              		.loc 1 299 3 view .LVU16
  79              		.loc 1 299 3 view .LVU17
  80 0036 5A69     		ldr	r2, [r3, #20]
  81 0038 42F40032 		orr	r2, r2, #131072
  82 003c 5A61     		str	r2, [r3, #20]
  83              		.loc 1 299 3 view .LVU18
  84 003e 5A69     		ldr	r2, [r3, #20]
  85 0040 02F40032 		and	r2, r2, #131072
  86 0044 0392     		str	r2, [sp, #12]
  87              		.loc 1 299 3 view .LVU19
  88 0046 039A     		ldr	r2, [sp, #12]
  89              	.LBE6:
  90              		.loc 1 299 3 view .LVU20
 300:Core/Src/main.cpp ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  91              		.loc 1 300 3 view .LVU21
  92              	.LBB7:
  93              		.loc 1 300 3 view .LVU22
  94              		.loc 1 300 3 view .LVU23
  95 0048 5A69     		ldr	r2, [r3, #20]
  96 004a 42F48022 		orr	r2, r2, #262144
  97 004e 5A61     		str	r2, [r3, #20]
  98              		.loc 1 300 3 view .LVU24
  99 0050 5B69     		ldr	r3, [r3, #20]
 100 0052 03F48023 		and	r3, r3, #262144
ARM GAS  /tmp/ccZrXVfi.s 			page 8


 101 0056 0493     		str	r3, [sp, #16]
 102              		.loc 1 300 3 view .LVU25
 103 0058 049B     		ldr	r3, [sp, #16]
 104              	.LBE7:
 105              		.loc 1 300 3 view .LVU26
 301:Core/Src/main.cpp **** 
 302:Core/Src/main.cpp ****   /*Configure GPIO pin Output Level */
 303:Core/Src/main.cpp ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 106              		.loc 1 303 3 view .LVU27
 107              		.loc 1 303 20 is_stmt 0 view .LVU28
 108 005a 2246     		mov	r2, r4
 109 005c 2021     		movs	r1, #32
 110 005e 4FF09040 		mov	r0, #1207959552
 111 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 112              	.LVL0:
 304:Core/Src/main.cpp **** 
 305:Core/Src/main.cpp ****   /*Configure GPIO pin : B1_Pin */
 306:Core/Src/main.cpp ****   GPIO_InitStruct.Pin = B1_Pin;
 113              		.loc 1 306 3 is_stmt 1 view .LVU29
 114              		.loc 1 306 23 is_stmt 0 view .LVU30
 115 0066 4FF40053 		mov	r3, #8192
 116 006a 0593     		str	r3, [sp, #20]
 307:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 117              		.loc 1 307 3 is_stmt 1 view .LVU31
 118              		.loc 1 307 24 is_stmt 0 view .LVU32
 119 006c 4FF40413 		mov	r3, #2162688
 120 0070 0693     		str	r3, [sp, #24]
 308:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 121              		.loc 1 308 3 is_stmt 1 view .LVU33
 122              		.loc 1 308 24 is_stmt 0 view .LVU34
 123 0072 0794     		str	r4, [sp, #28]
 309:Core/Src/main.cpp ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 124              		.loc 1 309 3 is_stmt 1 view .LVU35
 125              		.loc 1 309 16 is_stmt 0 view .LVU36
 126 0074 05A9     		add	r1, sp, #20
 127 0076 0948     		ldr	r0, .L3+4
 128 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 129              	.LVL1:
 310:Core/Src/main.cpp **** 
 311:Core/Src/main.cpp ****   /*Configure GPIO pin : LD2_Pin */
 312:Core/Src/main.cpp ****   GPIO_InitStruct.Pin = LD2_Pin;
 130              		.loc 1 312 3 is_stmt 1 view .LVU37
 131              		.loc 1 312 23 is_stmt 0 view .LVU38
 132 007c 2023     		movs	r3, #32
 133 007e 0593     		str	r3, [sp, #20]
 313:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 134              		.loc 1 313 3 is_stmt 1 view .LVU39
 135              		.loc 1 313 24 is_stmt 0 view .LVU40
 136 0080 0123     		movs	r3, #1
 137 0082 0693     		str	r3, [sp, #24]
 314:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 138              		.loc 1 314 3 is_stmt 1 view .LVU41
 139              		.loc 1 314 24 is_stmt 0 view .LVU42
 140 0084 0794     		str	r4, [sp, #28]
 315:Core/Src/main.cpp ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 141              		.loc 1 315 3 is_stmt 1 view .LVU43
 142              		.loc 1 315 25 is_stmt 0 view .LVU44
ARM GAS  /tmp/ccZrXVfi.s 			page 9


 143 0086 0894     		str	r4, [sp, #32]
 316:Core/Src/main.cpp ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 144              		.loc 1 316 3 is_stmt 1 view .LVU45
 145              		.loc 1 316 16 is_stmt 0 view .LVU46
 146 0088 05A9     		add	r1, sp, #20
 147 008a 4FF09040 		mov	r0, #1207959552
 148 008e FFF7FEFF 		bl	HAL_GPIO_Init
 149              	.LVL2:
 317:Core/Src/main.cpp **** 
 318:Core/Src/main.cpp **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 319:Core/Src/main.cpp **** /* USER CODE END MX_GPIO_Init_2 */
 320:Core/Src/main.cpp **** }
 150              		.loc 1 320 1 view .LVU47
 151 0092 0AB0     		add	sp, sp, #40
 152              		.cfi_def_cfa_offset 8
 153              		@ sp needed
 154 0094 10BD     		pop	{r4, pc}
 155              	.L4:
 156 0096 00BF     		.align	2
 157              	.L3:
 158 0098 00100240 		.word	1073876992
 159 009c 00080048 		.word	1207961600
 160              		.cfi_endproc
 161              	.LFE135:
 163              		.align	1
 164              		.global	Error_Handler
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 169              	Error_Handler:
 170              	.LFB136:
 321:Core/Src/main.cpp **** 
 322:Core/Src/main.cpp **** /* USER CODE BEGIN 4 */
 323:Core/Src/main.cpp **** 
 324:Core/Src/main.cpp **** /* USER CODE END 4 */
 325:Core/Src/main.cpp **** 
 326:Core/Src/main.cpp **** /**
 327:Core/Src/main.cpp ****   * @brief  This function is executed in case of error occurrence.
 328:Core/Src/main.cpp ****   * @retval None
 329:Core/Src/main.cpp ****   */
 330:Core/Src/main.cpp **** void Error_Handler(void)
 331:Core/Src/main.cpp **** {
 171              		.loc 1 331 1 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ Volatile: function does not return.
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 332:Core/Src/main.cpp ****   /* USER CODE BEGIN Error_Handler_Debug */
 333:Core/Src/main.cpp ****   /* User can add his own implementation to report the HAL error return state */
 334:Core/Src/main.cpp ****   __disable_irq();
 177              		.loc 1 334 3 view .LVU49
 178              	.LBB8:
 179              	.LBI8:
 180              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
ARM GAS  /tmp/ccZrXVfi.s 			page 10


   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
ARM GAS  /tmp/ccZrXVfi.s 			page 11


  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccZrXVfi.s 			page 12


 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 181              		.loc 2 140 27 view .LVU50
 182              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 183              		.loc 2 142 3 view .LVU51
 184              		.syntax unified
 185              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 186 00a0 72B6     		cpsid i
 187              	@ 0 "" 2
 188              		.thumb
 189              		.syntax unified
 190              	.L6:
 191              	.LBE9:
 192              	.LBE8:
 335:Core/Src/main.cpp ****   while (1)
 193              		.loc 1 335 3 discriminator 1 view .LVU52
 194              		.loc 1 335 3 discriminator 1 view .LVU53
 195 00a2 FEE7     		b	.L6
 196              		.cfi_endproc
 197              	.LFE136:
 199              		.align	1
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 204              	_ZL12MX_I2C1_Initv:
 205              	.LFB133:
 208:Core/Src/main.cpp **** 
 206              		.loc 1 208 1 view -0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210 00a4 08B5     		push	{r3, lr}
 211              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccZrXVfi.s 			page 13


 212              		.cfi_offset 3, -8
 213              		.cfi_offset 14, -4
 217:Core/Src/main.cpp ****   hi2c1.Init.Timing = 0x00201D2B;
 214              		.loc 1 217 3 view .LVU55
 217:Core/Src/main.cpp ****   hi2c1.Init.Timing = 0x00201D2B;
 215              		.loc 1 217 18 is_stmt 0 view .LVU56
 216 00a6 1148     		ldr	r0, .L15
 217 00a8 114B     		ldr	r3, .L15+4
 218 00aa 0360     		str	r3, [r0]
 218:Core/Src/main.cpp ****   hi2c1.Init.OwnAddress1 = 0;
 219              		.loc 1 218 3 is_stmt 1 view .LVU57
 218:Core/Src/main.cpp ****   hi2c1.Init.OwnAddress1 = 0;
 220              		.loc 1 218 21 is_stmt 0 view .LVU58
 221 00ac 114B     		ldr	r3, .L15+8
 222 00ae 4360     		str	r3, [r0, #4]
 219:Core/Src/main.cpp ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 223              		.loc 1 219 3 is_stmt 1 view .LVU59
 219:Core/Src/main.cpp ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 224              		.loc 1 219 26 is_stmt 0 view .LVU60
 225 00b0 0023     		movs	r3, #0
 226 00b2 8360     		str	r3, [r0, #8]
 220:Core/Src/main.cpp ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 227              		.loc 1 220 3 is_stmt 1 view .LVU61
 220:Core/Src/main.cpp ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 228              		.loc 1 220 29 is_stmt 0 view .LVU62
 229 00b4 0122     		movs	r2, #1
 230 00b6 C260     		str	r2, [r0, #12]
 221:Core/Src/main.cpp ****   hi2c1.Init.OwnAddress2 = 0;
 231              		.loc 1 221 3 is_stmt 1 view .LVU63
 221:Core/Src/main.cpp ****   hi2c1.Init.OwnAddress2 = 0;
 232              		.loc 1 221 30 is_stmt 0 view .LVU64
 233 00b8 0361     		str	r3, [r0, #16]
 222:Core/Src/main.cpp ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 234              		.loc 1 222 3 is_stmt 1 view .LVU65
 222:Core/Src/main.cpp ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 235              		.loc 1 222 26 is_stmt 0 view .LVU66
 236 00ba 4361     		str	r3, [r0, #20]
 223:Core/Src/main.cpp ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 237              		.loc 1 223 3 is_stmt 1 view .LVU67
 223:Core/Src/main.cpp ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 238              		.loc 1 223 31 is_stmt 0 view .LVU68
 239 00bc 8361     		str	r3, [r0, #24]
 224:Core/Src/main.cpp ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 240              		.loc 1 224 3 is_stmt 1 view .LVU69
 224:Core/Src/main.cpp ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 241              		.loc 1 224 30 is_stmt 0 view .LVU70
 242 00be C361     		str	r3, [r0, #28]
 225:Core/Src/main.cpp ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 243              		.loc 1 225 3 is_stmt 1 view .LVU71
 225:Core/Src/main.cpp ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 244              		.loc 1 225 28 is_stmt 0 view .LVU72
 245 00c0 0362     		str	r3, [r0, #32]
 226:Core/Src/main.cpp ****   {
 246              		.loc 1 226 3 is_stmt 1 view .LVU73
 226:Core/Src/main.cpp ****   {
 247              		.loc 1 226 19 is_stmt 0 view .LVU74
 248 00c2 FFF7FEFF 		bl	HAL_I2C_Init
ARM GAS  /tmp/ccZrXVfi.s 			page 14


 249              	.LVL3:
 226:Core/Src/main.cpp ****   {
 250              		.loc 1 226 3 view .LVU75
 251 00c6 50B9     		cbnz	r0, .L12
 233:Core/Src/main.cpp ****   {
 252              		.loc 1 233 3 is_stmt 1 view .LVU76
 233:Core/Src/main.cpp ****   {
 253              		.loc 1 233 35 is_stmt 0 view .LVU77
 254 00c8 0021     		movs	r1, #0
 255 00ca 0848     		ldr	r0, .L15
 256 00cc FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 257              	.LVL4:
 233:Core/Src/main.cpp ****   {
 258              		.loc 1 233 3 view .LVU78
 259 00d0 38B9     		cbnz	r0, .L13
 240:Core/Src/main.cpp ****   {
 260              		.loc 1 240 3 is_stmt 1 view .LVU79
 240:Core/Src/main.cpp ****   {
 261              		.loc 1 240 36 is_stmt 0 view .LVU80
 262 00d2 0021     		movs	r1, #0
 263 00d4 0548     		ldr	r0, .L15
 264 00d6 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 265              	.LVL5:
 240:Core/Src/main.cpp ****   {
 266              		.loc 1 240 3 view .LVU81
 267 00da 20B9     		cbnz	r0, .L14
 248:Core/Src/main.cpp **** 
 268              		.loc 1 248 1 view .LVU82
 269 00dc 08BD     		pop	{r3, pc}
 270              	.L12:
 228:Core/Src/main.cpp ****   }
 271              		.loc 1 228 5 is_stmt 1 view .LVU83
 228:Core/Src/main.cpp ****   }
 272              		.loc 1 228 18 is_stmt 0 view .LVU84
 273 00de FFF7FEFF 		bl	Error_Handler
 274              	.LVL6:
 275              	.L13:
 235:Core/Src/main.cpp ****   }
 276              		.loc 1 235 5 is_stmt 1 view .LVU85
 235:Core/Src/main.cpp ****   }
 277              		.loc 1 235 18 is_stmt 0 view .LVU86
 278 00e2 FFF7FEFF 		bl	Error_Handler
 279              	.LVL7:
 280              	.L14:
 242:Core/Src/main.cpp ****   }
 281              		.loc 1 242 5 is_stmt 1 view .LVU87
 242:Core/Src/main.cpp ****   }
 282              		.loc 1 242 18 is_stmt 0 view .LVU88
 283 00e6 FFF7FEFF 		bl	Error_Handler
 284              	.LVL8:
 285              	.L16:
 286 00ea 00BF     		.align	2
 287              	.L15:
 288 00ec 00000000 		.word	.LANCHOR0
 289 00f0 00540040 		.word	1073763328
 290 00f4 2B1D2000 		.word	2104619
 291              		.cfi_endproc
ARM GAS  /tmp/ccZrXVfi.s 			page 15


 292              	.LFE133:
 294              		.align	1
 295              		.syntax unified
 296              		.thumb
 297              		.thumb_func
 299              	_ZL19MX_USART2_UART_Initv:
 300              	.LFB134:
 256:Core/Src/main.cpp **** 
 301              		.loc 1 256 1 is_stmt 1 view -0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305 00f8 08B5     		push	{r3, lr}
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 3, -8
 308              		.cfi_offset 14, -4
 265:Core/Src/main.cpp ****   huart2.Init.BaudRate = 38400;
 309              		.loc 1 265 3 view .LVU90
 265:Core/Src/main.cpp ****   huart2.Init.BaudRate = 38400;
 310              		.loc 1 265 19 is_stmt 0 view .LVU91
 311 00fa 0B48     		ldr	r0, .L21
 312 00fc 0B4B     		ldr	r3, .L21+4
 313 00fe 4365     		str	r3, [r0, #84]
 266:Core/Src/main.cpp ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 314              		.loc 1 266 3 is_stmt 1 view .LVU92
 266:Core/Src/main.cpp ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 315              		.loc 1 266 24 is_stmt 0 view .LVU93
 316 0100 4FF41643 		mov	r3, #38400
 317 0104 8365     		str	r3, [r0, #88]
 267:Core/Src/main.cpp ****   huart2.Init.StopBits = UART_STOPBITS_1;
 318              		.loc 1 267 3 is_stmt 1 view .LVU94
 267:Core/Src/main.cpp ****   huart2.Init.StopBits = UART_STOPBITS_1;
 319              		.loc 1 267 26 is_stmt 0 view .LVU95
 320 0106 0023     		movs	r3, #0
 321 0108 C365     		str	r3, [r0, #92]
 268:Core/Src/main.cpp ****   huart2.Init.Parity = UART_PARITY_NONE;
 322              		.loc 1 268 3 is_stmt 1 view .LVU96
 268:Core/Src/main.cpp ****   huart2.Init.Parity = UART_PARITY_NONE;
 323              		.loc 1 268 24 is_stmt 0 view .LVU97
 324 010a 0366     		str	r3, [r0, #96]
 269:Core/Src/main.cpp ****   huart2.Init.Mode = UART_MODE_TX_RX;
 325              		.loc 1 269 3 is_stmt 1 view .LVU98
 269:Core/Src/main.cpp ****   huart2.Init.Mode = UART_MODE_TX_RX;
 326              		.loc 1 269 22 is_stmt 0 view .LVU99
 327 010c 4366     		str	r3, [r0, #100]
 270:Core/Src/main.cpp ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 328              		.loc 1 270 3 is_stmt 1 view .LVU100
 270:Core/Src/main.cpp ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 329              		.loc 1 270 20 is_stmt 0 view .LVU101
 330 010e 0C22     		movs	r2, #12
 331 0110 8266     		str	r2, [r0, #104]
 271:Core/Src/main.cpp ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 332              		.loc 1 271 3 is_stmt 1 view .LVU102
 271:Core/Src/main.cpp ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 333              		.loc 1 271 25 is_stmt 0 view .LVU103
 334 0112 C366     		str	r3, [r0, #108]
 272:Core/Src/main.cpp ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
ARM GAS  /tmp/ccZrXVfi.s 			page 16


 335              		.loc 1 272 3 is_stmt 1 view .LVU104
 272:Core/Src/main.cpp ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 336              		.loc 1 272 28 is_stmt 0 view .LVU105
 337 0114 0367     		str	r3, [r0, #112]
 273:Core/Src/main.cpp ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 338              		.loc 1 273 3 is_stmt 1 view .LVU106
 273:Core/Src/main.cpp ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 339              		.loc 1 273 30 is_stmt 0 view .LVU107
 340 0116 4367     		str	r3, [r0, #116]
 274:Core/Src/main.cpp ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 341              		.loc 1 274 3 is_stmt 1 view .LVU108
 274:Core/Src/main.cpp ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 342              		.loc 1 274 38 is_stmt 0 view .LVU109
 343 0118 8367     		str	r3, [r0, #120]
 275:Core/Src/main.cpp ****   {
 344              		.loc 1 275 3 is_stmt 1 view .LVU110
 275:Core/Src/main.cpp ****   {
 345              		.loc 1 275 20 is_stmt 0 view .LVU111
 346 011a 5430     		adds	r0, r0, #84
 347 011c FFF7FEFF 		bl	HAL_UART_Init
 348              	.LVL9:
 275:Core/Src/main.cpp ****   {
 349              		.loc 1 275 3 view .LVU112
 350 0120 00B9     		cbnz	r0, .L20
 283:Core/Src/main.cpp **** 
 351              		.loc 1 283 1 view .LVU113
 352 0122 08BD     		pop	{r3, pc}
 353              	.L20:
 277:Core/Src/main.cpp ****   }
 354              		.loc 1 277 5 is_stmt 1 view .LVU114
 277:Core/Src/main.cpp ****   }
 355              		.loc 1 277 18 is_stmt 0 view .LVU115
 356 0124 FFF7FEFF 		bl	Error_Handler
 357              	.LVL10:
 358              	.L22:
 359              		.align	2
 360              	.L21:
 361 0128 00000000 		.word	.LANCHOR0
 362 012c 00440040 		.word	1073759232
 363              		.cfi_endproc
 364              	.LFE134:
 366              		.align	1
 367              		.global	_Z18SystemClock_Configv
 368              		.syntax unified
 369              		.thumb
 370              		.thumb_func
 372              	_Z18SystemClock_Configv:
 373              	.LFB132:
 160:Core/Src/main.cpp ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 374              		.loc 1 160 1 is_stmt 1 view -0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 152
 377              		@ frame_needed = 0, uses_anonymous_args = 0
 378 0130 00B5     		push	{lr}
 379              		.cfi_def_cfa_offset 4
 380              		.cfi_offset 14, -4
 381 0132 A7B0     		sub	sp, sp, #156
ARM GAS  /tmp/ccZrXVfi.s 			page 17


 382              		.cfi_def_cfa_offset 160
 161:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 383              		.loc 1 161 3 view .LVU117
 161:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 384              		.loc 1 161 22 is_stmt 0 view .LVU118
 385 0134 2822     		movs	r2, #40
 386 0136 0021     		movs	r1, #0
 387 0138 1CA8     		add	r0, sp, #112
 388 013a FFF7FEFF 		bl	memset
 389              	.LVL11:
 162:Core/Src/main.cpp ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 390              		.loc 1 162 3 is_stmt 1 view .LVU119
 162:Core/Src/main.cpp ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 391              		.loc 1 162 22 is_stmt 0 view .LVU120
 392 013e 0021     		movs	r1, #0
 393 0140 1791     		str	r1, [sp, #92]
 394 0142 1891     		str	r1, [sp, #96]
 395 0144 1991     		str	r1, [sp, #100]
 396 0146 1A91     		str	r1, [sp, #104]
 397 0148 1B91     		str	r1, [sp, #108]
 163:Core/Src/main.cpp **** 
 398              		.loc 1 163 3 is_stmt 1 view .LVU121
 163:Core/Src/main.cpp **** 
 399              		.loc 1 163 28 is_stmt 0 view .LVU122
 400 014a 5822     		movs	r2, #88
 401 014c 01A8     		add	r0, sp, #4
 402 014e FFF7FEFF 		bl	memset
 403              	.LVL12:
 168:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 404              		.loc 1 168 3 is_stmt 1 view .LVU123
 168:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 405              		.loc 1 168 36 is_stmt 0 view .LVU124
 406 0152 0223     		movs	r3, #2
 407 0154 1C93     		str	r3, [sp, #112]
 169:Core/Src/main.cpp ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 408              		.loc 1 169 3 is_stmt 1 view .LVU125
 169:Core/Src/main.cpp ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 409              		.loc 1 169 30 is_stmt 0 view .LVU126
 410 0156 0122     		movs	r2, #1
 411 0158 1F92     		str	r2, [sp, #124]
 170:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 412              		.loc 1 170 3 is_stmt 1 view .LVU127
 170:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 413              		.loc 1 170 41 is_stmt 0 view .LVU128
 414 015a 1022     		movs	r2, #16
 415 015c 2092     		str	r2, [sp, #128]
 171:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 416              		.loc 1 171 3 is_stmt 1 view .LVU129
 171:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 417              		.loc 1 171 34 is_stmt 0 view .LVU130
 418 015e 2293     		str	r3, [sp, #136]
 172:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 419              		.loc 1 172 3 is_stmt 1 view .LVU131
 172:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 420              		.loc 1 172 35 is_stmt 0 view .LVU132
 421 0160 4FF40043 		mov	r3, #32768
 422 0164 2393     		str	r3, [sp, #140]
ARM GAS  /tmp/ccZrXVfi.s 			page 18


 173:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 423              		.loc 1 173 3 is_stmt 1 view .LVU133
 173:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 424              		.loc 1 173 32 is_stmt 0 view .LVU134
 425 0166 4FF4E013 		mov	r3, #1835008
 426 016a 2493     		str	r3, [sp, #144]
 174:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 427              		.loc 1 174 3 is_stmt 1 view .LVU135
 175:Core/Src/main.cpp ****   {
 428              		.loc 1 175 3 view .LVU136
 175:Core/Src/main.cpp ****   {
 429              		.loc 1 175 24 is_stmt 0 view .LVU137
 430 016c 1CA8     		add	r0, sp, #112
 431 016e FFF7FEFF 		bl	HAL_RCC_OscConfig
 432              	.LVL13:
 175:Core/Src/main.cpp ****   {
 433              		.loc 1 175 3 view .LVU138
 434 0172 C8B9     		cbnz	r0, .L28
 182:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 435              		.loc 1 182 3 is_stmt 1 view .LVU139
 182:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 436              		.loc 1 182 31 is_stmt 0 view .LVU140
 437 0174 0F23     		movs	r3, #15
 438 0176 1793     		str	r3, [sp, #92]
 184:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 439              		.loc 1 184 3 is_stmt 1 view .LVU141
 184:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 440              		.loc 1 184 34 is_stmt 0 view .LVU142
 441 0178 0221     		movs	r1, #2
 442 017a 1891     		str	r1, [sp, #96]
 185:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 443              		.loc 1 185 3 is_stmt 1 view .LVU143
 185:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 444              		.loc 1 185 35 is_stmt 0 view .LVU144
 445 017c 0023     		movs	r3, #0
 446 017e 1993     		str	r3, [sp, #100]
 186:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 447              		.loc 1 186 3 is_stmt 1 view .LVU145
 186:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 448              		.loc 1 186 36 is_stmt 0 view .LVU146
 449 0180 4FF48062 		mov	r2, #1024
 450 0184 1A92     		str	r2, [sp, #104]
 187:Core/Src/main.cpp **** 
 451              		.loc 1 187 3 is_stmt 1 view .LVU147
 187:Core/Src/main.cpp **** 
 452              		.loc 1 187 36 is_stmt 0 view .LVU148
 453 0186 1B93     		str	r3, [sp, #108]
 189:Core/Src/main.cpp ****   {
 454              		.loc 1 189 3 is_stmt 1 view .LVU149
 189:Core/Src/main.cpp ****   {
 455              		.loc 1 189 26 is_stmt 0 view .LVU150
 456 0188 17A8     		add	r0, sp, #92
 457 018a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 458              	.LVL14:
 189:Core/Src/main.cpp ****   {
 459              		.loc 1 189 3 view .LVU151
 460 018e 68B9     		cbnz	r0, .L29
ARM GAS  /tmp/ccZrXVfi.s 			page 19


 193:Core/Src/main.cpp ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 461              		.loc 1 193 3 is_stmt 1 view .LVU152
 193:Core/Src/main.cpp ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 462              		.loc 1 193 38 is_stmt 0 view .LVU153
 463 0190 2223     		movs	r3, #34
 464 0192 0193     		str	r3, [sp, #4]
 194:Core/Src/main.cpp ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 465              		.loc 1 194 3 is_stmt 1 view .LVU154
 194:Core/Src/main.cpp ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 466              		.loc 1 194 38 is_stmt 0 view .LVU155
 467 0194 0023     		movs	r3, #0
 468 0196 0493     		str	r3, [sp, #16]
 195:Core/Src/main.cpp ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 469              		.loc 1 195 3 is_stmt 1 view .LVU156
 195:Core/Src/main.cpp ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 470              		.loc 1 195 36 is_stmt 0 view .LVU157
 471 0198 0893     		str	r3, [sp, #32]
 196:Core/Src/main.cpp ****   {
 472              		.loc 1 196 3 is_stmt 1 view .LVU158
 196:Core/Src/main.cpp ****   {
 473              		.loc 1 196 32 is_stmt 0 view .LVU159
 474 019a 01A8     		add	r0, sp, #4
 475 019c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 476              	.LVL15:
 196:Core/Src/main.cpp ****   {
 477              		.loc 1 196 3 view .LVU160
 478 01a0 30B9     		cbnz	r0, .L30
 200:Core/Src/main.cpp **** 
 479              		.loc 1 200 1 view .LVU161
 480 01a2 27B0     		add	sp, sp, #156
 481              		.cfi_remember_state
 482              		.cfi_def_cfa_offset 4
 483              		@ sp needed
 484 01a4 5DF804FB 		ldr	pc, [sp], #4
 485              	.L28:
 486              		.cfi_restore_state
 177:Core/Src/main.cpp ****   }
 487              		.loc 1 177 5 is_stmt 1 view .LVU162
 177:Core/Src/main.cpp ****   }
 488              		.loc 1 177 18 is_stmt 0 view .LVU163
 489 01a8 FFF7FEFF 		bl	Error_Handler
 490              	.LVL16:
 491              	.L29:
 191:Core/Src/main.cpp ****   }
 492              		.loc 1 191 5 is_stmt 1 view .LVU164
 191:Core/Src/main.cpp ****   }
 493              		.loc 1 191 18 is_stmt 0 view .LVU165
 494 01ac FFF7FEFF 		bl	Error_Handler
 495              	.LVL17:
 496              	.L30:
 198:Core/Src/main.cpp ****   }
 497              		.loc 1 198 5 is_stmt 1 view .LVU166
 198:Core/Src/main.cpp ****   }
 498              		.loc 1 198 18 is_stmt 0 view .LVU167
 499 01b0 FFF7FEFF 		bl	Error_Handler
 500              	.LVL18:
 501              		.cfi_endproc
ARM GAS  /tmp/ccZrXVfi.s 			page 20


 502              	.LFE132:
 504              		.global	__aeabi_f2d
 505              		.section	.rodata.str1.4,"aMS",%progbits,1
 506              		.align	2
 507              	.LC0:
 508 0000 25662056 		.ascii	"%f V\015\012\000"
 508      0D0A00
 509              		.text
 510              		.align	1
 511              		.global	main
 512              		.syntax unified
 513              		.thumb
 514              		.thumb_func
 516              	main:
 517              	.LFB131:
  77:Core/Src/main.cpp **** 
 518              		.loc 1 77 1 is_stmt 1 view -0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 64
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522 01b4 70B5     		push	{r4, r5, r6, lr}
 523              		.cfi_def_cfa_offset 16
 524              		.cfi_offset 4, -16
 525              		.cfi_offset 5, -12
 526              		.cfi_offset 6, -8
 527              		.cfi_offset 14, -4
 528 01b6 92B0     		sub	sp, sp, #72
 529              		.cfi_def_cfa_offset 88
  88:Core/Src/main.cpp **** 
 530              		.loc 1 88 3 view .LVU169
  88:Core/Src/main.cpp **** 
 531              		.loc 1 88 11 is_stmt 0 view .LVU170
 532 01b8 FFF7FEFF 		bl	HAL_Init
 533              	.LVL19:
  95:Core/Src/main.cpp **** 
 534              		.loc 1 95 3 is_stmt 1 view .LVU171
  95:Core/Src/main.cpp **** 
 535              		.loc 1 95 21 is_stmt 0 view .LVU172
 536 01bc FFF7FEFF 		bl	_Z18SystemClock_Configv
 537              	.LVL20:
 102:Core/Src/main.cpp ****   MX_I2C1_Init();
 538              		.loc 1 102 3 is_stmt 1 view .LVU173
 102:Core/Src/main.cpp ****   MX_I2C1_Init();
 539              		.loc 1 102 15 is_stmt 0 view .LVU174
 540 01c0 FFF71EFF 		bl	_ZL12MX_GPIO_Initv
 541              	.LVL21:
 103:Core/Src/main.cpp ****   MX_USART2_UART_Init();
 542              		.loc 1 103 3 is_stmt 1 view .LVU175
 103:Core/Src/main.cpp ****   MX_USART2_UART_Init();
 543              		.loc 1 103 15 is_stmt 0 view .LVU176
 544 01c4 FFF76EFF 		bl	_ZL12MX_I2C1_Initv
 545              	.LVL22:
 104:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 546              		.loc 1 104 3 is_stmt 1 view .LVU177
 104:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 547              		.loc 1 104 22 is_stmt 0 view .LVU178
 548 01c8 FFF796FF 		bl	_ZL19MX_USART2_UART_Initv
ARM GAS  /tmp/ccZrXVfi.s 			page 21


 549              	.LVL23:
 112:Core/Src/main.cpp **** 
 550              		.loc 1 112 3 is_stmt 1 view .LVU179
 116:Core/Src/main.cpp ****   int16_t reading;
 551              		.loc 1 116 3 view .LVU180
 117:Core/Src/main.cpp ****   float voltage;
 552              		.loc 1 117 3 view .LVU181
 118:Core/Src/main.cpp ****   const float voltageConv = 6.114 / 32768.0;
 553              		.loc 1 118 3 view .LVU182
 119:Core/Src/main.cpp **** 
 554              		.loc 1 119 3 view .LVU183
 119:Core/Src/main.cpp **** 
 555              		.loc 1 119 3 is_stmt 0 view .LVU184
 556 01cc 1FE0     		b	.L33
 557              	.LVL24:
 558              	.L32:
 141:Core/Src/main.cpp **** 
 559              		.loc 1 141 7 is_stmt 1 view .LVU185
 141:Core/Src/main.cpp **** 
 560              		.loc 1 141 25 is_stmt 0 view .LVU186
 561 01ce 07EE903A 		vmov	s15, r3	@ int
 562 01d2 F8EEE77A 		vcvt.f32.s32	s15, s15
 563              	.LVL25:
 143:Core/Src/main.cpp ****       HAL_UART_Transmit(&huart2, (uint8_t*)buf, strlen(buf), HAL_MAX_DELAY);
 564              		.loc 1 143 7 is_stmt 1 view .LVU187
 143:Core/Src/main.cpp ****       HAL_UART_Transmit(&huart2, (uint8_t*)buf, strlen(buf), HAL_MAX_DELAY);
 565              		.loc 1 143 14 is_stmt 0 view .LVU188
 566 01d6 9FED267A 		vldr.32	s14, .L36
 567 01da 67EE877A 		vmul.f32	s15, s15, s14
 568              	.LVL26:
 143:Core/Src/main.cpp ****       HAL_UART_Transmit(&huart2, (uint8_t*)buf, strlen(buf), HAL_MAX_DELAY);
 569              		.loc 1 143 14 view .LVU189
 570 01de 17EE900A 		vmov	r0, s15
 571 01e2 FFF7FEFF 		bl	__aeabi_f2d
 572              	.LVL27:
 143:Core/Src/main.cpp ****       HAL_UART_Transmit(&huart2, (uint8_t*)buf, strlen(buf), HAL_MAX_DELAY);
 573              		.loc 1 143 14 view .LVU190
 574 01e6 0246     		mov	r2, r0
 575 01e8 0B46     		mov	r3, r1
 576 01ea 2249     		ldr	r1, .L36+4
 577 01ec 05A8     		add	r0, sp, #20
 578 01ee FFF7FEFF 		bl	sprintf
 579              	.LVL28:
 144:Core/Src/main.cpp ****       HAL_Delay(500);
 580              		.loc 1 144 7 is_stmt 1 view .LVU191
 144:Core/Src/main.cpp ****       HAL_Delay(500);
 581              		.loc 1 144 55 is_stmt 0 view .LVU192
 582 01f2 05A8     		add	r0, sp, #20
 583 01f4 FFF7FEFF 		bl	strlen
 584              	.LVL29:
 144:Core/Src/main.cpp ****       HAL_Delay(500);
 585              		.loc 1 144 24 view .LVU193
 586 01f8 4FF0FF33 		mov	r3, #-1
 587 01fc 82B2     		uxth	r2, r0
 588 01fe 05A9     		add	r1, sp, #20
 589 0200 1D48     		ldr	r0, .L36+8
 590 0202 FFF7FEFF 		bl	HAL_UART_Transmit
ARM GAS  /tmp/ccZrXVfi.s 			page 22


 591              	.LVL30:
 145:Core/Src/main.cpp **** 
 592              		.loc 1 145 7 is_stmt 1 view .LVU194
 145:Core/Src/main.cpp **** 
 593              		.loc 1 145 16 is_stmt 0 view .LVU195
 594 0206 4FF4FA70 		mov	r0, #500
 595 020a FFF7FEFF 		bl	HAL_Delay
 596              	.LVL31:
 122:Core/Src/main.cpp ****   {
 597              		.loc 1 122 3 is_stmt 1 view .LVU196
 598              	.L33:
 122:Core/Src/main.cpp ****   {
 599              		.loc 1 122 3 view .LVU197
 124:Core/Src/main.cpp ****     
 600              		.loc 1 124 7 view .LVU198
 124:Core/Src/main.cpp ****     
 601              		.loc 1 124 19 is_stmt 0 view .LVU199
 602 020e 0126     		movs	r6, #1
 603 0210 8DF80C60 		strb	r6, [sp, #12]
 126:Core/Src/main.cpp ****       
 604              		.loc 1 126 7 is_stmt 1 view .LVU200
 126:Core/Src/main.cpp ****       
 605              		.loc 1 126 19 is_stmt 0 view .LVU201
 606 0214 F123     		movs	r3, #241
 607 0216 8DF80D30 		strb	r3, [sp, #13]
 128:Core/Src/main.cpp ****       
 608              		.loc 1 128 7 is_stmt 1 view .LVU202
 128:Core/Src/main.cpp ****       
 609              		.loc 1 128 19 is_stmt 0 view .LVU203
 610 021a 8323     		movs	r3, #131
 611 021c 8DF80E30 		strb	r3, [sp, #14]
 130:Core/Src/main.cpp ****       ADSwrite[0] = 0x00;
 612              		.loc 1 130 7 is_stmt 1 view .LVU204
 130:Core/Src/main.cpp ****       ADSwrite[0] = 0x00;
 613              		.loc 1 130 30 is_stmt 0 view .LVU205
 614 0220 164C     		ldr	r4, .L36+12
 615 0222 6425     		movs	r5, #100
 616 0224 0095     		str	r5, [sp]
 617 0226 0323     		movs	r3, #3
 618 0228 03AA     		add	r2, sp, #12
 619 022a 9021     		movs	r1, #144
 620 022c 2046     		mov	r0, r4
 621 022e FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 622              	.LVL32:
 131:Core/Src/main.cpp ****       HAL_I2C_Master_Transmit(&hi2c1, ADS1115_ADDRESS<<1, ADSwrite, 1, 100);
 623              		.loc 1 131 7 is_stmt 1 view .LVU206
 131:Core/Src/main.cpp ****       HAL_I2C_Master_Transmit(&hi2c1, ADS1115_ADDRESS<<1, ADSwrite, 1, 100);
 624              		.loc 1 131 19 is_stmt 0 view .LVU207
 625 0232 0023     		movs	r3, #0
 626 0234 8DF80C30 		strb	r3, [sp, #12]
 132:Core/Src/main.cpp ****       HAL_Delay(20);
 627              		.loc 1 132 7 is_stmt 1 view .LVU208
 132:Core/Src/main.cpp ****       HAL_Delay(20);
 628              		.loc 1 132 30 is_stmt 0 view .LVU209
 629 0238 0095     		str	r5, [sp]
 630 023a 3346     		mov	r3, r6
 631 023c 03AA     		add	r2, sp, #12
ARM GAS  /tmp/ccZrXVfi.s 			page 23


 632 023e 9021     		movs	r1, #144
 633 0240 2046     		mov	r0, r4
 634 0242 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 635              	.LVL33:
 133:Core/Src/main.cpp ****       HAL_I2C_Master_Receive(&hi2c1, ADS1115_ADDRESS<<1, ADSwrite, 2, 100);
 636              		.loc 1 133 7 is_stmt 1 view .LVU210
 133:Core/Src/main.cpp ****       HAL_I2C_Master_Receive(&hi2c1, ADS1115_ADDRESS<<1, ADSwrite, 2, 100);
 637              		.loc 1 133 16 is_stmt 0 view .LVU211
 638 0246 1420     		movs	r0, #20
 639 0248 FFF7FEFF 		bl	HAL_Delay
 640              	.LVL34:
 134:Core/Src/main.cpp ****       reading = ADSwrite[0] << 8 | ADSwrite[1];
 641              		.loc 1 134 7 is_stmt 1 view .LVU212
 134:Core/Src/main.cpp ****       reading = ADSwrite[0] << 8 | ADSwrite[1];
 642              		.loc 1 134 29 is_stmt 0 view .LVU213
 643 024c 0095     		str	r5, [sp]
 644 024e 0223     		movs	r3, #2
 645 0250 03AA     		add	r2, sp, #12
 646 0252 9021     		movs	r1, #144
 647 0254 2046     		mov	r0, r4
 648 0256 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 649              	.LVL35:
 135:Core/Src/main.cpp ****       if(reading < 0)
 650              		.loc 1 135 7 is_stmt 1 view .LVU214
 135:Core/Src/main.cpp ****       if(reading < 0)
 651              		.loc 1 135 27 is_stmt 0 view .LVU215
 652 025a 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 135:Core/Src/main.cpp ****       if(reading < 0)
 653              		.loc 1 135 29 view .LVU216
 654 025e 1B02     		lsls	r3, r3, #8
 135:Core/Src/main.cpp ****       if(reading < 0)
 655              		.loc 1 135 34 view .LVU217
 656 0260 1BB2     		sxth	r3, r3
 135:Core/Src/main.cpp ****       if(reading < 0)
 657              		.loc 1 135 46 view .LVU218
 658 0262 9DF80D20 		ldrb	r2, [sp, #13]	@ zero_extendqisi2
 659              	.LVL36:
 136:Core/Src/main.cpp ****       {
 660              		.loc 1 136 7 is_stmt 1 view .LVU219
 661 0266 1343     		orrs	r3, r3, r2
 662              	.LVL37:
 136:Core/Src/main.cpp ****       {
 663              		.loc 1 136 7 is_stmt 0 view .LVU220
 664 0268 B1D5     		bpl	.L32
 138:Core/Src/main.cpp ****       }
 665              		.loc 1 138 17 view .LVU221
 666 026a 0023     		movs	r3, #0
 667              	.LVL38:
 138:Core/Src/main.cpp ****       }
 668              		.loc 1 138 17 view .LVU222
 669 026c AFE7     		b	.L32
 670              	.L37:
 671 026e 00BF     		.align	2
 672              	.L36:
 673 0270 E3A54339 		.word	960734691
 674 0274 00000000 		.word	.LC0
 675 0278 54000000 		.word	.LANCHOR0+84
ARM GAS  /tmp/ccZrXVfi.s 			page 24


 676 027c 00000000 		.word	.LANCHOR0
 677              		.cfi_endproc
 678              	.LFE131:
 680              		.global	huart2
 681              		.global	hi2c1
 682              		.bss
 683              		.align	2
 684              		.set	.LANCHOR0,. + 0
 687              	hi2c1:
 688 0000 00000000 		.space	84
 688      00000000 
 688      00000000 
 688      00000000 
 688      00000000 
 691              	huart2:
 692 0054 00000000 		.space	136
 692      00000000 
 692      00000000 
 692      00000000 
 692      00000000 
 693              		.text
 694              	.Letext0:
 695              		.file 3 "/opt/st/stm32cubeclt_1.17.0/GNU-tools-for-STM32/arm-none-eabi/include/machine/_default_ty
 696              		.file 4 "/opt/st/stm32cubeclt_1.17.0/GNU-tools-for-STM32/arm-none-eabi/include/sys/_stdint.h"
 697              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 698              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 699              		.file 7 "/opt/st/stm32cubeclt_1.17.0/GNU-tools-for-STM32/lib/gcc/arm-none-eabi/12.3.1/include/stdd
 700              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 701              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 702              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 703              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 704              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 705              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2c.h"
 706              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 707              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 708              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2c_ex.h"
 709              		.file 17 "/opt/st/stm32cubeclt_1.17.0/GNU-tools-for-STM32/arm-none-eabi/include/string.h"
 710              		.file 18 "/opt/st/stm32cubeclt_1.17.0/GNU-tools-for-STM32/arm-none-eabi/include/stdio.h"
 711              		.file 19 "Core/Inc/ADS1115.hpp"
ARM GAS  /tmp/ccZrXVfi.s 			page 25


DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
     /tmp/ccZrXVfi.s:20     .text:00000000 $t
     /tmp/ccZrXVfi.s:25     .text:00000000 _ZL12MX_GPIO_Initv
     /tmp/ccZrXVfi.s:158    .text:00000098 $d
     /tmp/ccZrXVfi.s:163    .text:000000a0 $t
     /tmp/ccZrXVfi.s:169    .text:000000a0 Error_Handler
     /tmp/ccZrXVfi.s:204    .text:000000a4 _ZL12MX_I2C1_Initv
     /tmp/ccZrXVfi.s:288    .text:000000ec $d
     /tmp/ccZrXVfi.s:294    .text:000000f8 $t
     /tmp/ccZrXVfi.s:299    .text:000000f8 _ZL19MX_USART2_UART_Initv
     /tmp/ccZrXVfi.s:361    .text:00000128 $d
     /tmp/ccZrXVfi.s:366    .text:00000130 $t
     /tmp/ccZrXVfi.s:372    .text:00000130 _Z18SystemClock_Configv
     /tmp/ccZrXVfi.s:506    .rodata.str1.4:00000000 $d
     /tmp/ccZrXVfi.s:516    .text:000001b4 main
     /tmp/ccZrXVfi.s:673    .text:00000270 $d
     /tmp/ccZrXVfi.s:691    .bss:00000054 huart2
     /tmp/ccZrXVfi.s:687    .bss:00000000 hi2c1
     /tmp/ccZrXVfi.s:683    .bss:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_f2d
HAL_Init
sprintf
strlen
HAL_UART_Transmit
HAL_Delay
HAL_I2C_Master_Transmit
HAL_I2C_Master_Receive
